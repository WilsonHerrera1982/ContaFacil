@model ContaFacil.Models.Factura

<link href="~/css/select2.css" rel="stylesheet" />
<link href="~/css/select2.min.css" rel="stylesheet" />
<h2>Crear Nueva Factura</h2>

<form id="facturaForm" asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="IdCliente">Cliente</label>
        <select asp-for="IdCliente" class="form-control select2-cliente">
            <option value="">-- Seleccione un cliente --</option>
            @foreach (var cliente in ViewBag.Clientes)
            {
                <option value="@cliente.IdCliente">@cliente.IdPersonaNavigation.Nombre @cliente.IdPersonaNavigation.Identificacion</option>
            }
        </select>
    </div>
    <div id="anticipoInfo" class="alert alert-warning mt-3" style="display: none;">
        <strong>Anticipo del cliente:</strong> <span id="anticipoAmount"></span>
    </div>

    <h3>Detalles de Factura</h3>
    <table id="detallesTable" class="table">
        <thead>
            <tr>
                <th>Código</th>
                <th>Producto</th>
                <th>Cantidad</th>
                <th>Precio Unitario</th>
                <th>Descuento</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <div id="stockError" style="color: red; display: none;"></div>

    <button type="button" id="addDetalle" class="btn btn-secondary">Agregar Detalle</button>

    <div class="form-group">
        <label>Subtotal 0%</label>
        <input type="text" id="subtotal0" name="Subtotal0" class="form-control" readonly />
    </div>

    <div class="form-group">
        <label>Subtotal 15%</label>
        <input type="text" id="subtotal15" name="Subtotal15" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label>IVA</label>
        <input type="text" id="subtotalSinImpuestos" name="SubtotalSinImpuestos" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label>Total Descuentos</label>
        <input type="text" id="totalDescuentos" name="TotalDescuentos" class="form-control" readonly />
    </div>
    <div class="form-group">
        <label>Monto Total</label>
        <input type="text" id="montoTotal" name="MontoTotal" class="form-control" readonly />
    </div>

    <h3>Formas de Pago</h3>
    <table id="pagosTable" class="table">
        <thead>
            <tr>
                <th>Tipo de Pago</th>
                <th>Valor</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    <button type="button" id="addPago" class="btn btn-secondary">Agregar Forma de Pago</button>

    <div class="form-group mt-3">
        <label>Total Pagado</label>
        <input type="text" id="totalPagado" class="form-control" readonly />
    </div>
    <div class="form-group form-check">
        <label class="form-check-label">
            <input class="form-check-input" asp-for="Credito" /> Crédito
        </label>
    </div>
    <button type="submit" id="crearFactura" class="btn btn-primary mt-3" style="display: none;">Crear Factura</button>
</form>

@section Scripts {
    <script src="~/js/jquery-3.6.0.js"></script>
    <script src="~/js/jquery-3.6.0.min.js"></script>
    <script src="~/js/select2.full.js"></script>
    <script src="~/js/select2.full.min.js"></script>
    <script src="~/js/select2.js"></script>
    <script src="~/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            let detalleCount = 0;
            let pagoCount = 0;
            let timeoutId;

            $("#addDetalle").click(function () {
                let newRow = `
                <tr>
                    <td>
                        <input type="text" class="form-control producto-codigo" placeholder="Código">
                    </td>
                    <td>
                                   <select id="productoSelect" name="detalles[${detalleCount}].IdProducto" class="form-control producto-select">
                                            <option value="">-- Seleccione un producto --</option>
        @foreach (var producto in ViewBag.Productos)
        {
                                                    <option value="@producto.IdProducto"
                                                            data-codigo="@producto.Codigo"
                                                            data-descripcion="@producto.NombreCompleto"
                                                            data-porcentaje="@producto.Porcentaje"
                                                            data-descuento="@producto.Descuento">
                @producto.NombreCompleto
                                                    </option>
        }
                                        </select>
                    <input type="hidden" name="detalles[${detalleCount}].Descripcion" class="producto-descripcion">
                    </td>
                    <td><input type="number" name="detalles[${detalleCount}].Cantidad" class="form-control cantidad" value="1" min="1" /></td>
                    <td><input type="number" name="detalles[${detalleCount}].PrecioUnitario" class="form-control precio" readonly /></td>
                    <td><input type="number" name="detalles[${detalleCount}].Descuento" class="form-control descuento" readonly /></td>
                    <td><input type="number" class="form-control subtotal" readonly /></td>
                    <td><button type="button" class="btn btn-danger removeDetalle">Eliminar</button></td>
                </tr>
                `;
                $("#detallesTable tbody").append(newRow);
                detalleCount++;
            });

            $("#addPago").click(function () {
                let newRow = `
                <tr>
                    <td>
                        <select name="pagos[${pagoCount}].IdTipoPago" class="form-control tipo-pago">
                            <option value="">-- Seleccione tipo de pago --</option>
        @foreach (var item in (SelectList)ViewData["IdTipoPago"])
        {
                                    <option value="@item.Value">@item.Text</option>
        }
                        </select>
                    </td>
                    <td>
                        <input type="number" name="pagos[${pagoCount}].Monto" class="form-control valor-pago" step="0.01" min="0" />
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger removePago">Eliminar</button>
                    </td>
                </tr>
                `;
                $("#pagosTable tbody").append(newRow);
                pagoCount++;
                calcularTotalPagado();
            });

            $(document).on("input", ".valor-pago", calcularTotalPagado);

            $(document).on("change input", ".cantidad", function () {
                let row = $(this).closest("tr");
                let productoId = row.find(".producto-select").val();
                let cantidad = $(this).val();

                if (productoId) {
                    verificarStockYActualizar(productoId, cantidad, row);
                } else {
                    let descuentoPorcentaje = row.data("descuentoPorcentaje") || 0;
                    row.find(".descuento").val(descuentoPorcentaje);
                    calcularSubtotal(row);
                }
            });

            $(document).on("change", ".producto-select", function () {
                let productoId = $(this).val();
                let descripcion = $(this).find("option:selected").data("descripcion");
                let porcentaje = $(this).find("option:selected").data("porcentaje");
                let codigo = $(this).find("option:selected").data("codigo");
                let row = $(this).closest("tr");
                row.find(".producto-descripcion").val(descripcion);
                row.data("porcentaje", porcentaje);
                row.find(".producto-codigo").val(codigo);

                if (productoId) {
                    actualizarDetallesProducto(productoId, row);
                    verificarStockYActualizar(productoId, row.find(".cantidad").val(), row);
                }
            });

            $(document).on("input", ".precio, .descuento", function () {
                calcularSubtotal($(this).closest("tr"));
            });

            function verificarStockYActualizar(productoId, cantidad, row) {
                $.get(`/Factura/VerificarStock?idProducto=${productoId}&cantidad=${cantidad}`, function (data) {
                    if (!data.disponible) {
                        $("#stockError").text(data.mensaje).show();
                        row.find(".cantidad").val(0);
                    } else {
                        $("#stockError").hide();
                        row.find(".precio").val(data.precioUnitario);
                    }
                    calcularSubtotal(row);
                });
            }

            function actualizarDetallesProducto(productoId, row) {
                $.get(`/Factura/GetProductoDetails?idProducto=${productoId}`, function (data) {
                    row.find(".precio").val(data.precioUnitario);
                    row.find(".descuento").val(data.descuento);
                    row.data("descuentoPorcentaje", data.descuento); // Guardamos el porcentaje de descuento

                    calcularSubtotal(row);
                });
            }

            function calcularSubtotal(row) {
                let cantidad = parseFloat(row.find(".cantidad").val()) || 0;
                let precio = parseFloat(row.find(".precio").val()) || 0;
                let descuentoPorcentaje = parseFloat(row.data("descuentoPorcentaje")) || 0;

                let subtotalSinDescuento = cantidad * precio;
                let descuentoValor = (subtotalSinDescuento * descuentoPorcentaje) / 100;
                let subtotalConDescuento = subtotalSinDescuento - descuentoValor;

                console.log(`Calculando subtotal: cantidad=${cantidad}, precio=${precio}, descuento=${descuentoPorcentaje}%, descuentoValor=${descuentoValor}, subtotal=${subtotalConDescuento}`);

                row.find(".subtotal").val(subtotalConDescuento.toFixed(2));
                row.find(".descuento").val(descuentoValor.toFixed(2));

                calcularTotal();
            }

            function calcularTotal() {
                let total = 0;
                let subtotal0 = 0;
                let subtotal15 = 0;
                let subtotalSinImpuestos = 0;
                let totalDescuentos = 0;

                $("#detallesTable tbody tr").each(function () {
                    let subtotal = parseFloat($(this).find(".subtotal").val()) || 0;
                    let porcentaje = parseFloat($(this).data("porcentaje")) || 0;
                    let descuento = parseFloat($(this).find(".descuento").val()) || 0;

                    if (porcentaje === 0) {
                        subtotal0 += subtotal;
                    } else if (porcentaje === 15) {
                        subtotal15 += subtotal;
                    }

                    subtotalSinImpuestos += subtotal;
                    total += subtotal;
                    totalDescuentos += descuento;
                });

                let impuesto15 = subtotal15 * 0.15;
                let totalConImpuestos = subtotal0 + subtotal15 + impuesto15;

                $("#subtotal0").val(subtotal0.toFixed(2));
                $("#subtotal15").val(subtotal15.toFixed(2));
                $("#subtotalSinImpuestos").val(impuesto15.toFixed(2));
                $("#totalDescuentos").val(totalDescuentos.toFixed(2));
                $("#montoTotal").val(totalConImpuestos.toFixed(2));

                calcularTotalPagado();
            }

            function calcularTotalPagado() {
                let totalPagado = 0;
                $(".valor-pago").each(function () {
                    totalPagado += parseFloat($(this).val()) || 0;
                });

                $("#totalPagado").val(totalPagado.toFixed(2));

                let montoTotal = parseFloat($("#montoTotal").val()) || 0;

                if (Math.abs(totalPagado - montoTotal) < 0.01) {
                    $("#crearFactura").show();
                } else {
                    $("#crearFactura").hide();
                }
            }

            $(document).on("click", ".removeDetalle", function () {
                $(this).closest("tr").remove();
                calcularTotal();
            });

            $(document).on("click", ".removePago", function () {
                $(this).closest("tr").remove();
                calcularTotalPagado();
            });

            $(document).on("keydown", ".producto-codigo", function (e) {
                if (e.keyCode === 13) { // Enter key
                    e.preventDefault();
                    procesarCodigo($(this));
                }
            });

            $(document).on("input", ".producto-codigo", function () {
                clearTimeout(timeoutId);
                let input = $(this);

                timeoutId = setTimeout(() => {
                    procesarCodigo(input);
                }, 300);
            });

            function procesarCodigo(input) {
                let codigo = input.val();
                let row = input.closest("tr");
                let select = row.find(".producto-select");

                let option = select.find(`option[data-codigo="${codigo}"]`);
                if (option.length) {
                    select.val(option.val()).trigger('change');
                } else if (codigo !== '') {
                    alert("Código de producto no encontrado");
                    input.val('');
                    select.val('').trigger('change');
                }
            }
        });

        $('.select2-cliente').on('change', function () {
            let clienteId = $(this).val();
            if (clienteId) {
                $.ajax({
                    url: '/Factura/GetClienteAnticipos',
                    type: 'GET',
                    data: { idCliente: clienteId },
                    success: function (data) {
                        if (data.totalAnticipos > 0) {
                            $('#anticipoAmount').text('$' + data.totalAnticipos.toFixed(2));
                            $('#anticipoInfo').show();
                        } else {
                            $('#anticipoInfo').hide();  // Corrected: this block hides if no anticipos
                        }
                    },
                
                    error: function () {
                        console.error('Error al obtener anticipos del cliente');
                        $('#anticipoInfo').hide();
                    }
                            });
                        } else {
            $('#anticipoInfo').hide();
        }
                    });

        $(document).ready(function () {
            try {
                $('.producto-select').select2({
                    placeholder: 'Buscar producto...',
                    allowClear: true
                });
            } catch (error) {
                console.error('Error initializing Select2: ', error);
            }
            try {
                $('.select2-cliente').select2({
                    placeholder: 'Buscar cliente...',
                    allowClear: true,
                    width: '100%'
                });
            } catch (error) {
                console.error('Error al inicializar Select2 para el dropdown de clientes: ', error);
            }
        });

    </script>
    
}